
; semicolons are comments
; all of this is data
; sequences of numbers are numbers
; all sequences of alphanumeric characters are strings
; strings containing whitespace should be wrapped in quotes
; (or for "emphasis")


(uservar int MiscVar 2048)


(struct FnordType
	(float ElapsedTime))


(struct SomeType
	(mat4 Whatever)
	(float Etc))


(struct WhatsitType
	(SomeType Moop))


(sampler SomeSampler
	(min GL_LINEAR)
	(mag GL_LINEAR))


(sampler PointSampler
	(min GL_NEAREST)
	(mag GL_NEAREST))


(format BgImageFormat GL_TEXTURE_2D GL_RGBA8 SomeSampler)


(format DepthFormat GL_TEXTURE_2D GL_DEPTH_COMPONENT32F PointSampler)


(texture RedColorTarget BgImageFormat
	(width ScreenWidth)
	(height ScreenHeight))


(texture BlueColorTarget BgImageFormat
	(width ScreenWidth)
	(height ScreenHeight))


(texture SomeDepthTarget DepthFormat
	(width ScreenWidth)
	(height ScreenHeight))


(pipeline TextureTest
	(vs "shaders/splat.vs.glsl")
	(fs "shaders/texture.fs.glsl")
	(interface Fnord FnordType)
	(interface BgImage BgImageFormat)
	(disable GL_DEPTH_TEST)
	(disable GL_CULL_FACE))


(pipeline SplatRed
	(vs "shaders/splat.vs.glsl")
	(fs "shaders/red.fs.glsl")
	(use SomeType)
	(interface Fnord FnordType)
	(interface Whatsit WhatsitType)
	(disable GL_DEPTH_TEST)
	(disable GL_CULL_FACE)
	(out
		RedColorTarget
		SomeDepthTarget))


(pipeline SplatBlue
	(copy SplatRed)
	(fs "shaders/blue.fs.glsl")
	(out
		BlueColorTarget
		SomeDepthTarget))


(pipeline Combiner
	(vs "shaders/splat.vs.glsl")
	(fs "shaders/combiner.fs.glsl")
	(interface Fnord FnordType)
	(interface RedImage BgImageFormat)
	(interface BlueImage BgImageFormat))


(buffer SomeHandle FnordType)


(texture YourTextureHere BgImageFormat
	(src "woman_taking_in_cheese_from_fire_escape.png"))


(renderer TextureTest
	(update SomeHandle)
	(draw TextureTest
		(bind Fnord SomeHandle)
		(bind BgImage YourTextureHere)))


(renderer Multipass
	(update SomeHandle)
	(draw SplatRed
		(bind Fnord SomeHandle))
	(draw SplatBlue
		(bind Fnord SomeHandle))
	(draw Combiner
		(bind RedImage RedColorTarget)
		(bind BlueImage BlueColorTarget)
		(bind Fnord SomeHandle)))
